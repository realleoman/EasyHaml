namespace :populate do
      desc "Add the default user"
      task :default_1_user => :environment do
        User.create :login => "admin", :email => "admin@dalai.com", :is_enabled => true, :is_protected => true, :password=>"nimda", :password_confirmation=>"nimda", :language => "en"
        User.find(:first, :conditions => ["login = ?", "admin"]).roles.create(:title => "admin")
        User.create :login => "gerardo", :email => "gerardo@dalai.com", :is_enabled => true, :is_protected => true, :password=>"nimda", :password_confirmation=>"nimda", :language => "en"
        User.find(:first, :conditions => ["login = ?", "gerardo"]).roles.create(:title => "admin")
        User.create :login => "juan", :email => "juan@dalai.com", :is_enabled => true, :is_protected => true, :password=>"nimda", :password_confirmation=>"nimda", :language => "en"
        User.find(:first, :conditions => ["login = ?", "juan"]).roles.create(:title => "admin")
        User.create :login => "jhernandez", :email => "jhernandez@dalai.com", :is_enabled => true, :is_protected => true, :password=>"nimda", :password_confirmation=>"nimda", :language => "en"  
        User.find(:first, :conditions => ["login = ?", "jhernandez"]).roles.create(:title => "admin")
      end
      
      desc "Add combo values"
      task :default_3_combo_values_english => :environment do
        combovalues={
        "Publication Type"=>"Newspaper|Magazine|Catalog",
        "Applied to" => "Sales person|Collector|Designer",
        "Units Height" => "Agates|Centimeters|Ciceros|Inches|Milimeters|Picas|Points",
        "Units Width" => "Agates|Centimeters|Ciceros|Inches|Milimeters|Picas|Points",
        "Sort Order" => "ASC|DESC",
        "Left-Right" => "Left|Right|None",
        "Format Type" => "Liner|Art|Text|Combo|Template|Richtext",
        "Unit Type" => "Words|Chars|Measures|Lines",
        "Period Type" => "Publication date|Entry date",
        "Consumer" => "Outcome Consumer|Monotributist|Registered|Not Enrolled|Exempt",
        "Format Address" => "DF|Mexico|USA|Argentina|Venezuela|Ecuador|Panama",
        "Mexico Address" => "Street|Number|Suburb|City|State|Country",
        "DF Address" => "Street|Number|Inside Number|Suburb|Delegation|State|Country",
        "USA Address" => "Address 1|Address 2|Number|City|State|Country",
        "Tipo de Descuentos" => "To Client|By Ad Type|By Contract|Manual", 
        "StartUp Module" => "admin|client|admanager",
        "Contract Type" => "Agreement|French Plan|Exchange",
        "Folder Structure" => "Project|Library",
        "Severities" => "High|Medium|Low|Warning|Event",
        "Case Status" => "New|Open|Hold|InProcess|Closed",
        "Task Type" => "Task|Parallel Group|Parallel Task",
        "Meta Type" => "Editable|Text-Area|List|Hierarchy|Hierarchy-Link|Editable-Combo|Link|Multi-Selection|Date|Time|Date-Time|Integer|Real|Boolean",
        "System Role" => "Admin|Proyect Manager|Participant|Read Only|",  
        "Authorization Roles" => "admin|read_admin|client|manage_projects|manage_jobs|manage_delieverables|manage_markups|upload_versions|upload_delieverables_attachments|download_delieverables_attachments|upload_job_attachments|download_job_attachments|upload_project_attachments|download_project_attachments|project_overview|all_active_task|change_assignments|add_markups|view_all_markups|view_open_markups|manage_libraries|read_libraries|job_member",
        "Deliverables Flow Control" => "inactive|active|cancelled|done|stand_by",
        "Mask" => "fixedlength7|fixedlength32-|fixedlength64|fixedlength128|fixedlength255",
        "Completion" => "green|yellow|orange|red",
        "Operators" => "Equal|<|>|Not_equal|in"
        }
        combovalues.each do |key, value|
          combo=Combo.find(:all,:conditions=>{:name => key })
          if combo.length==0
            Combo.create :name => key, :value => value
          else
            combo.first.value = value
            combo.first.save
          end          
        end        
      end
      
      desc "Add default values"
      task :default_5_values_english => :environment do
        Publication.create :name => "Newspaper", :publication_type => "Newspaper", :is_enabled => true, :product_type_ids => [4, 5], :has_weekly_cycle => true,  :units_height => 1, :units_width => 1, :page_height => 31, :page_width => 26, :margin_top => 1, :margin_bottom => 1, :margin_outside => 1, :margin_inside => 1, :bleed_top => 0, :bleed_bottom => 0, :bleed_outside => 0, :bleed_inside => 0, :classified_column_number => 6, :display_column_number => 4, :classified_column_width => 3.91, :display_column_width => 5.87, :classified_gutter_width => 0.5, :display_gutter_width => 0.5, :compression => 100, :publishes_monday => true, :publishes_tuesday => true, :publishes_wednesday => true, :publishes_thursday => true, :publishes_friday => true, :publishes_saturday => true, :publishes_sunday => true
        Publication.create :name => "Magazine", :publication_type => "Magazine", :is_enabled => true, :product_type_ids => [5], :has_weekly_cycle => true, :units_height => 1, :units_width => 1, :page_height => 31, :page_width => 26, :margin_top => 1, :margin_bottom => 1, :margin_outside => 1, :margin_inside => 1, :bleed_top => 0, :bleed_bottom => 0, :bleed_outside => 0, :bleed_inside => 0, :classified_column_number => 6, :display_column_number => 4, :classified_column_width => 3.91, :display_column_width => 5.87, :classified_gutter_width => 0.5, :display_gutter_width => 0.5, :compression => 100, :publishes_monday => false, :publishes_tuesday => false, :publishes_wednesday => false, :publishes_thursday => false, :publishes_friday => false, :publishes_saturday => false, :publishes_sunday => true
        Extra.create :name => "Ajuste de Tarifa Clasificado", :is_enabled => true, :apply_to_all_publications => true, :is_by_order => true, :apply_monday => true, :apply_tuesday => true, :apply_wednesday => true, :apply_thursday => true, :apply_friday => true, :apply_saturday => true, :apply_sunday => true, :value => 0, :is_percent => false, :is_per_unit => false, :is_exclusive_per_item => false, :priority => 0, :publication_ids=>[1]
        Extra.create :name => "Ajuste de Tarifa Desplegado", :is_enabled => true, :apply_to_all_publications => true, :is_by_order => true, :apply_monday => true, :apply_tuesday => true, :apply_wednesday => true, :apply_thursday => true, :apply_friday => true, :apply_saturday => true, :apply_sunday => true, :value => 0, :is_percent => false, :is_per_unit => false, :is_exclusive_per_item => false, :priority => 0, :publication_ids=>[1]
        AdKind.create :name => "General", :extra_id => 1, :is_enabled => true, :product_type_ids => [4, 5]
        AdKind.create :name => "Institucional", :extra_id => 1, :is_enabled => true, :product_type_ids => [5]
        Area.create :name => "Administracion"
        Classification.create :name => "Autos", :is_enabled => true, :index => 1, :sort_order => "ASC", :is_empty_classification => false, :header_height => 1.5, :parent_classification => 1, :publication_ids=>[1], :is_top_classification => true
        Classification.create :name => "Servicios", :is_enabled => true, :index => 1, :sort_order => "ASC", :is_empty_classification => false, :header_height => 1.5, :parent_classification => 2, :publication_ids=>[1], :is_top_classification => true
        Classification.create :name => "Bienes Raices", :is_enabled => true, :index => 1, :sort_order => "ASC", :is_empty_classification => false, :header_height => 1.5, :parent_classification => 3, :publication_ids=>[1], :is_top_classification => true
        PrintColor.create :name => "Blanco y Negro", :is_enabled => true, :code1 => "0", :extra_id => 1, :publication_ids=>[1]
        PrintColor.create :name => "Full Color", :is_enabled => true, :code1 => "0", :extra_id => 1, :publication_ids=>[1]
        PrintColor.create :name => "Una Tinta", :is_enabled => true, :code1 => "0", :extra_id => 1, :publication_ids=>[1]
        PrintColor.create :name => "Dos Tintas", :is_enabled => true, :code1 => "0", :extra_id => 1, :publication_ids=>[1]
        Country.create :name => "Mexico"
        Country.create :name => "USA"
        Currency.create :name => "Peso", :is_enabled => true, :is_default => true, :exchange_rate => 1
        Group.create :name => "General"
        Hierarchy.create :name => "General", :is_enabled => true, :is_top_hierarchy => 1, :parent_hierarchy => 1
        Market.create :name => "General", :is_enabled => true
        Payment.create :name => "Cash", :is_enabled => true, :payment_type_id => 1
        Period.create :name => "General", :is_enabled => true, :start_date => '2000/01/01', :end_date => '2050/12/31', :object_type => 1
        Period.create :name => "Trienio", :is_enabled => true, :start_date => '2009/01/01', :end_date => '2012/12/31', :object_type => 1
        Period.create :name => "Sexenal", :is_enabled => true, :start_date => '2006/01/01', :end_date => '2012/12/31', :object_type => 1
        Period.create :name => "2010", :is_enabled => true, :start_date => '2010/01/01', :end_date => '2010/12/31', :object_type => 1
        Period.create :name => "2009", :is_enabled => true, :start_date => '2009/01/01', :end_date => '2009/12/31', :object_type => 1
        Position.create :name => "General", :publication_ids=>[1]
        Position.create :name => "Contraportada", :publication_ids=>[1]
        Position.create :name => "Centrales", :publication_ids=>[1]
        Position.create :name => "Pagina Par", :publication_ids=>[1]
        Position.create :name => "Pagina Impar", :publication_ids=>[1]
        Rate.create :name => "Commercial", :product_type_id => 4, :is_enabled => true, :currency_id => 1, :publication_ids=>[1]
        Rate.create :name => "Displays", :product_type_id => 5, :is_enabled => true, :currency_id => 1, :publication_ids=>[1]
        Rate.create :name => "Newspaper", :product_type_id => 4, :is_enabled => true, :currency_id => 1, :publication_ids=>[1]
        Rate.create :name => "Magazine", :product_type_id => 5, :is_enabled => true, :currency_id => 1, :publication_ids=>[2]
        Route.create :name => "General"
        Section.create :name => "Local", :is_enabled => true, :index => 1, :is_empty_section => false, :publication_ids=>[1], :is_top_section => true
        Section.create :name => "Internacional", :is_enabled => true, :index => 1, :is_empty_section => false, :publication_ids=>[1], :is_top_section => true
        Segment.create :name => "General", :is_enabled => true, :is_top_segment => true
        Size.create :name => "Plana Completa", :is_enabled => true, :publication_ids=>[1], :columns => 0, :height => 0, :width => 0, :section_id => 1, :rate_id => 2
        Size.create :name => "Media Plana", :is_enabled => true, :publication_ids=>[1], :columns => 0, :height => 0, :width => 0, :section_id => 1, :rate_id => 2 
        Size.create :name => "Cuarto de Plana", :is_enabled => true, :publication_ids=>[1], :columns => 0, :height => 0, :width => 0, :section_id => 1, :rate_id => 2
        Size.create :name => "Plana Completa2", :is_enabled => true, :publication_ids=>[2], :columns => 0, :height => 0, :width => 0, :rate_id => 4
        Size.create :name => "Media Plana2", :is_enabled => true, :publication_ids=>[2], :columns => 0, :height => 0, :width => 0, :rate_id => 4
        Size.create :name => "Cuarto de Plana2", :is_enabled => true, :publication_ids=>[2], :columns => 0, :height => 0, :width => 0, :rate_id => 4
        State.create :name => "Aguascalientes", :country_id => 1
        State.create :name => "Baja California", :country_id => 1
        State.create :name => "Baja California Sur", :country_id => 1
        State.create :name => "Campeche", :country_id => 1
        State.create :name => "Coahuila", :country_id => 1
        State.create :name => "Colima", :country_id => 1
        State.create :name => "Chiapas", :country_id => 1
        State.create :name => "Chihuahua", :country_id => 1
        State.create :name => "Distrito Federal", :country_id => 1
        State.create :name => "Durango", :country_id => 1
        State.create :name => "Guanajuato", :country_id => 1
        State.create :name => "Guerrero", :country_id => 1
        State.create :name => "Hidalgo", :country_id => 1
        State.create :name => "Jalisco", :country_id => 1
        State.create :name => "Mexico", :country_id => 1
        State.create :name => "Michoacán", :country_id => 1
        State.create :name => "Morelos", :country_id => 1
        State.create :name => "Nayarit", :country_id => 1
        State.create :name => "Nuevo Leon", :country_id => 1
        State.create :name => "Oaxaca", :country_id => 1
        State.create :name => "Puebla", :country_id => 1
        State.create :name => "Queretaro", :country_id => 1
        State.create :name => "Quintana Roo", :country_id => 1
        State.create :name => "San Luis Potosi", :country_id => 1
        State.create :name => "Sinaloa", :country_id => 1
        State.create :name => "Sonora", :country_id => 1
        State.create :name => "Tabasco", :country_id => 1
        State.create :name => "Tamaulipas", :country_id => 1
        State.create :name => "Tlaxcala", :country_id => 1
        State.create :name => "Veracruz", :country_id => 1
        State.create :name => "Yucatan", :country_id => 1
        State.create :name => "Zacatecas", :country_id => 1
        State.create :name => "Alabama", :country_id => 2
        State.create :name => "Alaska", :country_id => 2
        State.create :name => "Arizona", :country_id => 2
        State.create :name => "Arkansas", :country_id => 2
        State.create :name => "California", :country_id => 2
        State.create :name => "Colorado", :country_id => 2
        State.create :name => "Connecticut", :country_id => 2
        State.create :name => "Delaware", :country_id => 2
        State.create :name => "Florida", :country_id => 2
        State.create :name => "Georgia", :country_id => 2
        State.create :name => "Hawaii", :country_id => 2
        State.create :name => "Idaho", :country_id => 2
        State.create :name => "Illinois", :country_id => 2
        State.create :name => "Indiana", :country_id => 2
        State.create :name => "Iowa", :country_id => 2
        State.create :name => "Kansas", :country_id => 2
        State.create :name => "Kentucky", :country_id => 2
        State.create :name => "Louisiana", :country_id => 2
        State.create :name => "Maine", :country_id => 2
        State.create :name => "Maryland", :country_id => 2
        State.create :name => "Massachusetts", :country_id => 2
        State.create :name => "Michigan", :country_id => 2
        State.create :name => "Minnesota", :country_id => 2
        State.create :name => "Mississippi", :country_id => 2
        State.create :name => "Missouri", :country_id => 2        
        State.create :name => "Montana", :country_id => 2
        State.create :name => "Nebraska", :country_id => 2
        State.create :name => "Nevada", :country_id => 2
        State.create :name => "New Hampshire", :country_id => 2
        State.create :name => "New Jersey", :country_id => 2
        State.create :name => "New Mexico", :country_id => 2
        State.create :name => "New York", :country_id => 2
        State.create :name => "North Carolina", :country_id => 2
        State.create :name => "North Dakota", :country_id => 2
        State.create :name => "Ohio", :country_id => 2
        State.create :name => "Oklahoma", :country_id => 2
        State.create :name => "Oregon", :country_id => 2
        State.create :name => "Pennsylvania", :country_id => 2
        State.create :name => "Rhode Island", :country_id => 2
        State.create :name => "South Carolina", :country_id => 2
        State.create :name => "South Dakota", :country_id => 2
        State.create :name => "Tennessee", :country_id => 2
        State.create :name => "Texas", :country_id => 2
        State.create :name => "Utah", :country_id => 2
        State.create :name => "Vermont", :country_id => 2
        State.create :name => "Virginia", :country_id => 2
        State.create :name => "Washington", :country_id => 2
        State.create :name => "West Virginia", :country_id => 2
        State.create :name => "Wisconsin", :country_id => 2
        State.create :name => "Wyoming", :country_id => 2
        Style.create :name => "Negrita", :is_enabled => true, :format => 1, :is_variable_size => false, :is_fixed_size => false, :word_count => 0, :columns => 0, :height => 0, :width => 0, :line_factor => 1, :height_factor => 1, :is_bold => false, :is_italic => false, :is_inverted => false, :is_caps => false, :has_frame => false, :force_classification => false, :force_rate => false, :publication_ids=>[1]
        Zone.create :name => "Norte"
        RateRangeClassified.create :rate_id => 1, :period_id => 1, :classification_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 1, :base_rate => 10, :extra_units => 1, :extra_rate => 1, :fixed_days => 0, :formula_type => 0, :is_bold => false, :is_italic => false, :is_caps => false, :has_frame => false, :is_reverted => false, :increment_bold => false, :increment_italic => false, :increment_caps => false, :rate_by_day => true, :rate_by_unit => true
        RateRangeClassified.create :rate_id => 3, :period_id => 2, :classification_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 1, :base_rate => 10, :extra_units => 1, :extra_rate => 1, :fixed_days => 0, :formula_type => 0, :is_bold => false, :is_italic => false, :is_caps => false, :has_frame => false, :is_reverted => false, :increment_bold => false, :increment_italic => false, :increment_caps => false, :rate_by_day => true, :rate_by_unit => true
        RateRangeClassified.create :rate_id => 1, :period_id => 3, :classification_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 2, :base_rate => 30, :extra_units => 1, :extra_rate => 2, :fixed_days => 0, :formula_type => 0, :is_bold => false, :is_italic => false, :is_caps => false, :has_frame => false, :is_reverted => false, :increment_bold => false, :increment_italic => false, :increment_caps => false, :rate_by_day => true, :rate_by_unit => true
        RateRangeClassified.create :rate_id => 3, :period_id => 4, :classification_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 2, :base_rate => 30, :extra_units => 1, :extra_rate => 2, :fixed_days => 0, :formula_type => 0, :is_bold => false, :is_italic => false, :is_caps => false, :has_frame => false, :is_reverted => false, :increment_bold => false, :increment_italic => false, :increment_caps => false, :rate_by_day => true, :rate_by_unit => true
        RateRangeClassified.create :rate_id => 1, :period_id => 5, :classification_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 1, :base_rate => 10, :extra_units => 1, :extra_rate => 1, :fixed_days => 0, :formula_type => 0, :is_bold => false, :is_italic => false, :is_caps => false, :has_frame => false, :is_reverted => false, :increment_bold => false, :increment_italic => false, :increment_caps => false, :rate_by_day => true, :rate_by_unit => true
        RateRangeClassified.create :rate_id => 3, :period_id => 1, :classification_id => 2, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 1, :base_rate => 10, :extra_units => 1, :extra_rate => 1, :fixed_days => 0, :formula_type => 0, :is_bold => false, :is_italic => false, :is_caps => false, :has_frame => false, :is_reverted => false, :increment_bold => false, :increment_italic => false, :increment_caps => false, :rate_by_day => true, :rate_by_unit => true
        RateRangeClassified.create :rate_id => 1, :period_id => 2, :classification_id => 2, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 2, :base_rate => 30, :extra_units => 1, :extra_rate => 2, :fixed_days => 0, :formula_type => 0, :is_bold => false, :is_italic => false, :is_caps => false, :has_frame => false, :is_reverted => false, :increment_bold => false, :increment_italic => false, :increment_caps => false, :rate_by_day => true, :rate_by_unit => true
        RateRangeClassified.create :rate_id => 3, :period_id => 3, :classification_id => 2, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 2, :base_rate => 30, :extra_units => 1, :extra_rate => 2, :fixed_days => 0, :formula_type => 0, :is_bold => false, :is_italic => false, :is_caps => false, :has_frame => false, :is_reverted => false, :increment_bold => false, :increment_italic => false, :increment_caps => false, :rate_by_day => true, :rate_by_unit => true
        RateRangeDisplay.create :rate_id => 2, :period_id => 1, :section_id => 1, :print_color_id => 1, :position_id => 1, :size_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 1, :base_rate => 10, :extra_units => 1, :extra_rate => 1, :fixed_days => 0, :formula_type => 0, :rate_by_day => true, :rate_by_unit => true
        RateRangeDisplay.create :rate_id => 4, :period_id => 2, :section_id => 1, :print_color_id => 1, :position_id => 1, :size_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 1, :base_rate => 10, :extra_units => 1, :extra_rate => 1, :fixed_days => 0, :formula_type => 0, :rate_by_day => true, :rate_by_unit => true
        RateRangeDisplay.create :rate_id => 2, :period_id => 3, :section_id => 1, :print_color_id => 1, :position_id => 1, :size_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 2, :base_rate => 30, :extra_units => 1, :extra_rate => 2, :fixed_days => 0, :formula_type => 0, :rate_by_day => true, :rate_by_unit => true
        RateRangeDisplay.create :rate_id => 4, :period_id => 4, :section_id => 1, :print_color_id => 1, :position_id => 1, :size_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 2, :base_rate => 30, :extra_units => 1, :extra_rate => 2, :fixed_days => 0, :formula_type => 0, :rate_by_day => true, :rate_by_unit => true
        RateRangeDisplay.create :rate_id => 2, :period_id => 5, :section_id => 1, :print_color_id => 1, :position_id => 1, :size_id => 1, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 1, :base_rate => 10, :extra_units => 1, :extra_rate => 1, :fixed_days => 0, :formula_type => 0, :rate_by_day => true, :rate_by_unit => true
        RateRangeDisplay.create :rate_id => 4, :period_id => 1, :section_id => 2, :print_color_id => 2, :position_id => 2, :size_id => 2, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 1, :base_rate => 10, :extra_units => 1, :extra_rate => 1, :fixed_days => 0, :formula_type => 0, :rate_by_day => true, :rate_by_unit => true
        RateRangeDisplay.create :rate_id => 2, :period_id => 2, :section_id => 2, :print_color_id => 2, :position_id => 2, :size_id => 2, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 2, :base_rate => 30, :extra_units => 1, :extra_rate => 2, :fixed_days => 0, :formula_type => 0, :rate_by_day => true, :rate_by_unit => true
        RateRangeDisplay.create :rate_id => 4, :period_id => 3, :section_id => 2, :print_color_id => 2, :position_id => 2, :size_id => 2, :search_days_max => 999, :search_days_min => 1, :search_units_max => 999, :search_units_min => 1, :search_columns_max => 8, :search_columns_min => 1, :base_units => 2, :base_rate => 30, :extra_units => 1, :extra_rate => 2, :fixed_days => 0, :formula_type => 0, :rate_by_day => true, :rate_by_unit => true
        
        CommissionType.create :name => "Comercial"
        CommissionTypeRange.create :commission_type_id => 1, :minimum_days => 1, :maximum_days => 999, :value => 10
        
        Extra.create :name => "Client Discount", :is_reserved => true, :access_code => 1000, :is_discount => true, :is_manual_entry => false, :publication_ids=>[1], :priority => 5000
        Extra.create :name => "Contract Discount", :is_reserved => true, :access_code => 1001, :is_discount => true, :is_manual_entry => false, :publication_ids=>[1], :priority => 5000
        Extra.create :name => "Exchange Discount", :is_reserved => true, :access_code => 1002, :is_discount => true, :is_manual_entry => false, :publication_ids=>[1], :priority => 5000
        Extra.create :name => "Benefit Discount", :is_reserved => true, :access_code => 1003, :is_discount => true, :is_manual_entry => false, :publication_ids=>[1], :priority => 5000
        Extra.create :name => "Commission Discount", :is_reserved => true, :access_code => 1004, :is_discount => true, :is_manual_entry => false, :publication_ids=>[1], :priority => 5000
        
        PrintColor.create :name => "Undefined", :is_enabled => true, :code1 => "0", :is_reserved => true, :access_code => 1000, :apply_to_all_publications => true, :extra_id => 1, :publication_ids=>[1]
        Position.create :name => "Undefined", :is_reserved => true, :access_code => 1000, :apply_to_all_publications => true, :publication_ids=>[1]
        Section.create :name => "Undefined", :is_enabled => true, :is_reserved => true, :access_code => 1000, :apply_to_all_publications => true, :index => 1, :is_empty_section => false, :publication_ids=>[1], :is_top_section => true
        Size.create :name => "Undefined", :is_enabled => true, :is_reserved => true, :access_code => 1000, :apply_to_all_publications => true, :force_size => true, :publication_ids=>[1], :columns => 0, :height => 0, :width => 0, :section_id => 1, :rate_id => 1
      end
      
      
      desc "Add types values"
      task :default_4_types_values_english => :environment do
        CreditType.create :name => "Immediate"
        CreditType.create :name => "Publication End"
        CreditType.create :name => "Publication Start"
        CreditType.create :name => "Daily"
        CreditType.create :name => "Fraccionated"
        CreditType.create :name => "Grouped"
        CreditType.create :name => "Periodic"

        PaymentType.create :name => "Cash", :is_default => 1
        PaymentType.create :name => "Check", :is_default => 0
        PaymentType.create :name => "Credit Card", :is_default => 0
        PaymentType.create :name => "Other", :is_default => 0        

        PeriodicType.create :name => "Weekly", :is_default => true, :quantity => 0
        PeriodicType.create :name => "Biweekly", :quantity => 0
        PeriodicType.create :name => "Monthly", :quantity => 0
        PeriodicType.create :name => "Custom", :quantity => 0

        ProductType.create :name => "Extra-Item"
        ProductType.create :name => "Contract-Item"
        ProductType.create :name => "Package"
        ProductType.create :name => "Classified"
        ProductType.create :name => "Display"
        ProductType.create :name => "Contract"
        ProductType.create :name => "Insert"
        ProductType.create :name => "Subscription"
        ProductType.create :name => "Other"
        ProductType.create :name => "Article"
        ProductType.create :name => "Cloud"
        ProductType.create :name => "Circulation"
      end
      
      desc "Add default client values"
      task :default_2_client_values => :environment do
        Organization.create :name => "Dalai", :is_company => true, :is_organization_owner => true, :organization_parent_id => 1, :organization_top_parent_id => 1
        Person.create :first_name => "Admin", :last_name => "Dalai", :title => "Mr.", :email => "admin@dalai.com", :taxid1 => "General", :birthday => '2000/01/01', :organization_id => 1, :address_id => 1
        Person.create :first_name => "Gerardo", :last_name => "Treviño", :title => "Ing.", :email => "gerardo@dalai.com", :taxid1 => "General", :birthday => '2000/01/01', :organization_id => 1, :address_id => 1
        Person.create :first_name => "Juan", :last_name => "Aguirre", :title => "Ing.", :email => "juan@dalai.com", :taxid1 => "General", :birthday => '2000/01/01', :organization_id => 1, :address_id => 1
        Person.create :first_name => "Jose", :last_name => "Hernández", :title => "Ing.", :email => "jhernandez@dalai.com", :taxid1 => "General", :birthday => '2000/01/01', :organization_id => 1, :address_id => 1
        Address.create :name => "Oficina", :street => "Prol. Alfonso Reyes #4508", :address1 => "Col. Villa del Rio", :format => "Mexico", :city => "Monterrey", :state_id => 1, :country_id => 1, :zip_code => "64850", :organization_id => 1
        Person.find(:first, :conditions => ["email = ?", "admin@dalai.com"]).users << User.find(:first, :conditions => ["login = ?", "admin"])
        Person.find(:first, :conditions => ["email = ?", "gerardo@dalai.com"]).users << User.find(:first, :conditions => ["login = ?", "gerardo"])
        Person.find(:first, :conditions => ["email = ?", "juan@dalai.com"]).users << User.find(:first, :conditions => ["login = ?", "juan"])
        Person.find(:first, :conditions => ["email = ?", "jhernandez@dalai.com"]).users << User.find(:first, :conditions => ["login = ?", "jhernandez"])
      end
      
      desc "Add relational values"
      task :default_6_relational_values => :environment do
        Extra.find(1).product_types << ProductType.find(4)
        Extra.find(2).product_types << ProductType.find(5)
        Extra.find(3).product_types << ProductType.find(5)
        Extra.find(4).product_types << ProductType.find(4)
        Extra.find(5).product_types << ProductType.find(4)
        Extra.find(6).product_types << ProductType.find(5)
        Extra.find(7).product_types << ProductType.find(5)
        Extra.find(3).product_types << ProductType.find(4)
        Classification.find(1).publications << Publication.find(1)
        Classification.find(2).publications << Publication.find(1)
        Classification.find(3).publications << Publication.find(1)
        Extra.find(1).publications << Publication.find(1)
        Extra.find(2).publications << Publication.find(2)
        Extra.find(3).publications << Publication.find(2)
        Extra.find(4).publications << Publication.find(2)
        Extra.find(5).publications << Publication.find(1)
        Extra.find(6).publications << Publication.find(1)
        Extra.find(7).publications << Publication.find(1)
        Rate.find(1).publications << Publication.find(1)
        Rate.find(2).publications << Publication.find(1)
        Rate.find(3).publications << Publication.find(1)
        Rate.find(4).publications << Publication.find(2)
        Position.find(1).publications << Publication.find(1)
        Position.find(2).publications << Publication.find(1)
        Position.find(3).publications << Publication.find(1)
        Position.find(4).publications << Publication.find(1)
        Position.find(5).publications << Publication.find(1)
        Position.find(6).publications << Publication.find(1)
        Section.find(1).publications << Publication.find(1)
        Section.find(2).publications << Publication.find(1)
        Section.find(3).publications << Publication.find(1)
        Size.find(1).publications << Publication.find(1)
        Size.find(2).publications << Publication.find(2)
        Size.find(3).publications << Publication.find(1)
        Size.find(4).publications << Publication.find(2)
        Size.find(5).publications << Publication.find(1)
        Size.find(6).publications << Publication.find(2)
        Style.find(1).publications << Publication.find(1)
        PrintColor.find(1).publications << Publication.find(1)
        PrintColor.find(2).publications << Publication.find(1)
        PrintColor.find(3).publications << Publication.find(1)
        PrintColor.find(4).publications << Publication.find(1)
        PrintColor.find(5).publications << Publication.find(1)
        ProductType.find(1).product_type_publications << ProductTypePublication.new(:publication_id => 1, :default_extra_id => 1, :default_classification_id => 1,:default_section_id => 1, :default_style_id => 1, :default_print_color_id => 1)
        ProductType.find(2).product_type_publications << ProductTypePublication.new(:publication_id => 1, :default_extra_id => 1, :default_classification_id => 1,:default_section_id => 1, :default_style_id => 1, :default_print_color_id => 1)
        ProductType.find(3).product_type_publications << ProductTypePublication.new(:publication_id => 1, :default_extra_id => 1, :default_classification_id => 1,:default_section_id => 1, :default_style_id => 1, :default_print_color_id => 1)
        ProductType.find(4).product_type_publications << ProductTypePublication.new(:publication_id => 1, :default_extra_id => 1, :default_classification_id => 1,:default_section_id => 1, :default_style_id => 1, :default_print_color_id => 1)
        ProductType.find(5).product_type_publications << ProductTypePublication.new(:publication_id => 1, :default_extra_id => 1, :default_classification_id => 1,:default_section_id => 1, :default_style_id => 1, :default_print_color_id => 1)
        ProductType.find(6).product_type_publications << ProductTypePublication.new(:publication_id => 1, :default_extra_id => 1, :default_classification_id => 1,:default_section_id => 1, :default_style_id => 1, :default_print_color_id => 1)
        ProductType.find(7).product_type_publications << ProductTypePublication.new(:publication_id => 1, :default_extra_id => 1, :default_classification_id => 1,:default_section_id => 1, :default_style_id => 1, :default_print_color_id => 1)
        ProductType.find(8).product_type_publications << ProductTypePublication.new(:publication_id => 1, :default_extra_id => 1, :default_classification_id => 1,:default_section_id => 1, :default_style_id => 1, :default_print_color_id => 1)
        #Publication.find(1).publication_sections << PublicationSection.new(:section_id => 1, :monday_to_thursday_due => 1700, :friday_due => 1700, :saturday_due => 1700, :sunday_due => 1700)
      end
      
      #RUNNING THIS POPULATOR TAKES A LOT OF TIME!!!
      #IT POPULATES ALL 2,456 MEXICO´S MUNICIPALITIES CODES
      #This populator needs the "Municipalities.CSV" file to create registers
      #UNCOMMENT AND RUN IT IF NEEDED
      # require 'csv'
      #desc "Add Mexico´s municipalities" 
      #  task :populate_municipalities => :environment do
      #  CSV.open('Municipalities.csv', 'r', ',').each do |row|
      #    Municipality.create :name => row[0], :state_id => State.find(:first, :conditions =>['name = ?', row[1].to_s]).id, :country_id => 1, :is_enabled => true
      #  end
      #end
      
      #RUNNING THIS POPULATOR TAKES A LOT OF TIME!!!
      #IT POPULATES ALL 100,000 MEXICO´S ZIP CODES
      #This populator needs the "Settlements.CSV" file to create registers
      #UNCOMMENT AND RUN IT IF NEEDED
      # Run "populate_municipalities" first
      #require 'csv'
      #desc "Add Mexico´s settlements (100,000 registers)" 
      #task :populate_settlements => :environment do
      #  CSV.open('SettlementsTest.csv', 'r', ',').each do |row|
      #    state=State.find(:first, :conditions =>['name = ?', row[4].to_s])
      #    state_id = state.id if state!=nil
      #    municipality=Municipality.find(:first, :conditions =>['name = ? AND state_id = ?', row[3].to_s, state_id])
      #    municipality_id = municipality.id if municipality !=nil
      #    Settlement.create :name => row[1],:settlement_type => row[2], :zip_code => row[0],:municipality_id => municipality_id, :state_id => state_id, :is_enabled => true, :country_id => 1
      #  end
      #end
      
      
      desc "Populate client values"
      task :populate_data => :environment do
        require 'populator'
        require 'faker'
        
        #[Category, Product, Person].each(&:delete_all)
        Organization.populate 5 do |organization|
          organization.name = Faker::Company.name #Populator.words(1..3).titleize
          #organization.phones     = Faker::PhoneNumber.phone_number
          organization.taxid1     = Faker::Lorem.words
          organization.is_agency  = [false, false, false, false, true]
          organization.is_company = [false, false, false, false, true]
          Address.populate 1..2 do |address|
            address.organization_id = organization.id
            address.name      = Faker::Company.name #Populator.words(1..3).titleize
            address.street    = Faker::Address.street_address
            address.address1  = Faker::Address.secondary_address
            address.city      = Faker::Address.city
            address.zip_code  = Faker::Address.zip_code
  
            Person.populate 1..2 do |person|
              person.organization_id = organization.id
              person.address_id = address.id
              person.first_name = Faker::Name.name
              person.last_name  = Faker::Name.name
              person.email      = Faker::Internet.email
              person.taxid1     = Faker::Lorem.words
            end
          end
        end
      end
      
      desc "Add default markup values"
      task :default_markup_values => :environment do
        Container.create :name => "Container1", :folder_structure => "Project", 
            :sources => File.expand_path(File.dirname(__FILE__)+"/../../../Containers/container1/sources"),
            :previews => File.expand_path(File.dirname(__FILE__)+"/../../../Containers/container1/previews"),
            :thumbnails => File.expand_path(File.dirname(__FILE__)+"/../../../Containers/container1/thumbnails"),
            :full_resolutions => File.expand_path(File.dirname(__FILE__)+"/../../../Containers/container1/full_res"),
            :hd_resolutions => File.expand_path(File.dirname(__FILE__)+"/../../../Containers/container1/hd_res"),
            :attachments => File.expand_path(File.dirname(__FILE__)+"/../../../Containers/container1/attachments")
        Container.create :name => "ContainerL", :folder_structure => "Library", 
            :sources => File.expand_path(File.dirname(__FILE__)+"/../../../Containers/container1/sources"),
            :thumbnails => File.expand_path(File.dirname(__FILE__)+"/../../../Containers/container1/thumbnails"),
            :full_resolutions => File.expand_path(File.dirname(__FILE__)+"/../../../Containers/container1/full_res")
      end

      desc "Add default asset_type values"
      task :default_asset_type_values => :environment do
        AssetType.create :name => "Small Package", :min_size_area => 0, :max_size_area => 400, :full_density => 350, :hd_density => 350, :full_quality => 60, :hd_quality => 100, :preview_density => 72, :is_enabled => 1, :is_protected => 1
        AssetType.create :name => "Medium Package", :min_size_area => 400, :max_size_area => 800, :full_density => 250, :hd_density => 250, :full_quality => 60, :hd_quality => 100, :preview_density => 72, :is_enabled => 1, :is_protected => 1
        AssetType.create :name => "Large Package", :min_size_area => 800, :max_size_area => 1200, :full_density => 100, :hd_density => 100, :full_quality => 60, :hd_quality => 100, :preview_density => 12, :is_enabled => 1, :is_protected => 1
        AssetType.create :name => "Display", :min_size_area => 1200, :max_size_area => 2500, :full_density => 35, :hd_density => 35, :full_quality => 60, :hd_quality => 100, :preview_density => 6, :is_enabled => 1, :is_protected => 1
        AssetType.create :name => "BillBoard", :min_size_area => 2500, :max_size_area => 5000, :full_density => 20, :hd_density => 20, :full_quality => 60, :hd_quality => 100, :preview_density => 3, :is_enabled => 1, :is_protected => 1
      end

      desc "Add default deliverable_type values"
      task :default_deliverable_type_values => :environment do
        DeliverableType.create :name => "Soft Proof", :precision => 100, :is_enabled => true
      end

      desc "Add default job_type values"
      task :default_job_type_values => :environment do
        JobType.create :name => "Package", :is_enabled => true
      end
      
      desc "Add default library_type values"
      task :default_library_type_values => :environment do
        LibraryType.create :name => "[Mechanical Drawings]", :is_enabled => true, :is_protected => 1
        LibraryType.create :name => "[Nutritional Tables]", :is_enabled => true, :is_protected => 1
      end
      
      desc "Add  metadata definitions values"
      task :default_metadata_definition_values => :environment do
        MetadataDefinition.create :name => "Country", :sort_order => 1, :metatype => "List", :model_name => "Deliverable", :filtertype => "", :filterfield => nil, :is_enabled => true
        MetadataDefinition.create :name => "Graphic", :sort_order => 2, :metatype => "List", :model_name => "Deliverable", :filtertype => "", :filterfield => nil, :is_enabled => true
        MetadataDefinition.create :name => "Brand", :sort_order => 3, :metatype => "List", :model_name => "Deliverable", :filtertype => "", :filterfield => nil, :is_enabled => true
        MetadataDefinition.create :name => "Category", :sort_order => 4, :metatype => "Hierarchy", :model_name => "Deliverable", :filtertype => "", :filterfield => "Brand", :is_enabled => true
        MetadataDefinition.create :name => "Variety", :sort_order => 5, :metatype => "Hierarchy", :model_name => "Deliverable", :filtertype => "", :filterfield => "Category", :is_enabled => true
        MetadataDefinition.create :name => "Net_Weight", :sort_order => 6, :metatype => "Hierarchy", :model_name => "Deliverable", :filtertype => "", :filterfield => "Variety", :is_enabled => true
        MetadataDefinition.create :name => "Mechanical_Drawings", :sort_order => 7, :metatype => "Hierarchy-Link", :model_name => "Deliverable", :filtertype => "", :filterfield => "Net_Weight", :is_enabled => true
        MetadataDefinition.create :name => "Regionality", :sort_order => 8, :metatype => "Hierarchy", :model_name => "Deliverable", :filtertype => "", :filterfield =>  "Variety", :is_enabled => true
        MetadataDefinition.create :name => "Sub_Type", :sort_order => 9, :metatype => "Hierarchy", :model_name => "Deliverable", :filtertype => "", :filterfield => "Net_Weight", :is_enabled => true
      end

      desc "Add  metadata combos values"
      task :default_metadata_combos_values => :environment do
        MetadataCombo.create :metadata => "Country", :value => "México", :is_enabled=>1

        MetadataCombo.create :metadata => "Graphic", :value => "Packaging", :is_enabled=>1

#----------------------------------------------------------------------------------------------------------#
        MetadataCombo.create :metadata => "Brand", :value => "All Bran", :is_enabled=>1
        my_Brand_filterfield = MetadataCombo.find(:first, :conditions => ["value = ?", "All Bran"]).id
          my_Category = "RTEC" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "BFN" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "1000g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "540g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "765g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "BF Chocolate" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "550g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "BF Cosecha Frutal" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "360g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "560g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Original" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "500g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "800g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Fibra Rica" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "500g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Plus" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "500g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "460g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Raisin BF" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "360g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "620g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Yogufibra" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "360g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "645g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

          my_Category = "Crumbs" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Empanizador" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Local" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "160g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Sachet", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "Sachet Crumbs", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "350g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "copacker", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

#----------------------------------------------------------------------------------------------------------#
        MetadataCombo.create :metadata => "Brand", :value => "Corn Flakes", :is_enabled=>1
        my_Brand_filterfield = MetadataCombo.find(:first, :conditions => ["value = ?", "Corn Flakes"]).id
          my_Category = "RTEC" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Avena" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "320g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "169", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "500g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Regular" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "25g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "23", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "200g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "350g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "500g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "530g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "660g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "900g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "565", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "BP 220g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "BP 713g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "BP 740g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

          my_Category = "Crumbs" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Empanizador" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Local" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "160g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Sachet", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "Sachet Crumbs", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "BP 184g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Sachet", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "Sachet Crumbs BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "350g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "Empanizador", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "Club 1050g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Display", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "copacker", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1


#----------------------------------------------------------------------------------------------------------#
        MetadataCombo.create :metadata => "Brand", :value => "Choco Krispis", :is_enabled=>1
        my_Brand_filterfield = MetadataCombo.find(:first, :conditions => ["value = ?", "Choco Krispis"]).id
          my_Category = "RTEC" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Regular" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "40g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "23", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "180g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "--", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "1190g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "320g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "530g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "750g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "BP 358g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "BP 840g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Max" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "370g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "855g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

          my_Category = "Bars" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Individual" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "19g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Liner", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134mm x 148mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Display" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "6ct x 19g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Display", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "130mm x 140mm x 47mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

#----------------------------------------------------------------------------------------------------------#
        MetadataCombo.create :metadata => "Brand", :value => "Choco Zucaritas", :is_enabled=>1
        my_Brand_filterfield = MetadataCombo.find(:first, :conditions => ["value = ?", "Choco Zucaritas"]).id
          my_Category = "RTEC" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Malvavisco" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "42g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "23", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "310g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "760g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Regular" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "730g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

#----------------------------------------------------------------------------------------------------------#
        MetadataCombo.create :metadata => "Brand", :value => "Zucaritas", :is_enabled=>1
        my_Brand_filterfield = MetadataCombo.find(:first, :conditions => ["value = ?", "Zucaritas"]).id
          my_Category = "RTEC" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Ekonopack" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "195g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "89", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Regular" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "40g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "23", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "1120g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "300g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "510g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "730g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "950g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "BP 330g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Individual" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "21g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Liner", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134mm x 148mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

          my_Category = "Bars" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Regular" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "6ct x 21g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "130mm x 140mm x 47mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

#----------------------------------------------------------------------------------------------------------#
        MetadataCombo.create :metadata => "Brand", :value => "Corn Pops", :is_enabled=>1
        my_Brand_filterfield = MetadataCombo.find(:first, :conditions => ["value = ?", "Corn Pops"]).id
          my_Category = "RTEC" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Regular" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Local" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "30g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "23", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "125g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "89", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "210g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "380g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "590g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "805g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

#----------------------------------------------------------------------------------------------------------#
        MetadataCombo.create :metadata => "Brand", :value => "Froot Loops", :is_enabled=>1
        my_Brand_filterfield = MetadataCombo.find(:first, :conditions => ["value = ?", "Froot Loops"]).id
          my_Category = "RTEC" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Regular" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Regional" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "25g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "23", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "120g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "89", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "230g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "134BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "350g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "520g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "735g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "BP 540g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "330", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

#----------------------------------------------------------------------------------------------------------#
        MetadataCombo.create :metadata => "Brand", :value => "Special K", :is_enabled=>1
        my_Brand_filterfield = MetadataCombo.find(:first, :conditions => ["value = ?", "Special K"]).id
          my_Category = "RTEC" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Regular" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "30" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "23", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "155" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "89", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "260" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "151", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "450" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "745" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427Slim", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "1000" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "30g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "23", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "1kg" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "427BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Chocolate" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "380" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "151", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Cosecha Roja" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "300" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "151", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Fruit & Yogurt" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "360" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "151", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "600" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "226BP", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Vainilla" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Global" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "378" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Paquete", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "151", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
      
          my_Category = "Bars" # ------Category
          MetadataCombo.create :metadata => "Category", :value => my_Category, :filterfield=>my_Brand_filterfield, :is_enabled=>1
          my_Category_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Category, my_Brand_filterfield]).id
            my_Variety = "Cosecha Roja" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Local" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Liner", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "127mm x 148mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "6ct x 24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Display", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "141mm x 148mm x 45mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

            my_Variety = "Manzana Suprema" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Local" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Liner", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "127mm x 148mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "6ct x 24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Display", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "141mm x 148mm x 45mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
      
           my_Variety = "Sabor Capuchino" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Local" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Liner", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "127mm x 148mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "6ct x 24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Display", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "141mm x 148mm x 45mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

           my_Variety = "Sabor Chocolate" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Local" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Liner", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "127mm x 148mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "6ct x 24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Display", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "141mm x 148mm x 45mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1

           my_Variety = "Sabor Vainilla" # ------Variety
            MetadataCombo.create :metadata => "Variety", :value => my_Variety, :filterfield=>my_Category_filterfield, :is_enabled=>1
            my_Variety_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Variety, my_Category_filterfield]).id
            my_Regionality = "Local" # ------Regionality
            MetadataCombo.create :metadata => "Regionality", :value => my_Regionality, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight = "24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Liner", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "127mm x 148mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
              my_Net_Weight = "6ct x 24g" # ------Net_Weight
              MetadataCombo.create :metadata => "Net_Weight", :value => my_Net_Weight, :filterfield=>my_Variety_filterfield, :is_enabled=>1
              my_Net_Weight_filterfield = MetadataCombo.find(:first, :conditions => ["value = ? and filterfield = ?", my_Net_Weight, my_Variety_filterfield]).id
                MetadataCombo.create :metadata => "Sub_Type", :value => "Display", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1
                MetadataCombo.create :metadata => "Mechanical_Drawings", :value => "141mm x 148mm x 45mm", :filterfield=>my_Net_Weight_filterfield, :is_enabled=>1      
      end

      desc "Populate special_id for MetadataCombo"
      task :populate_special_id_for_metadata_combo => :environment  do
        require 'active_record'
        
        ActiveRecord::Base.configurations = Rails::Configuration.new.database_configuration
        config = ActiveRecord::Base.configurations[RAILS_ENV]
        ActiveRecord::Base.establish_connection
         
        if defined?(MSSQL) then  
          ActiveRecord::Base.connection.execute("Update metadata_combos set special_id = LTRIM(RTRIM(cast(id as char(10))))+ '.'+ value;")
        else
          ActiveRecord::Base.connection.execute("Update metadata_combos m set special_id = Concat(trim(cast(m.id as char(10))), '.', m.value);")
        end
      end

      desc "Add default team_type value"
      task :default_team_type_value => :environment do
        team_types = TeamType.find(:all, :conditions => {:is_enabled => true})
        if team_types.blank?
          TeamType.create :name => "General", :is_enabled => true, :is_protected => true
        end
      end

      
      desc "Help Desk call and case types"
      task :help_desk_types => :environment do
        
        CallType.create :name => "Queja", :code => "CLQ1", :is_enabled => true, :comments => "Llamada de queja"
        CallType.create :name => "Sugerencia", :code => "CLS1", :is_enabled => true, :comments => "Llamada de sugerencia"
        CallType.create :name => "Felicitación", :code => "CLF1", :is_enabled => true, :comments => "Llamada de felicitación"
        CallType.create :name => "Información", :code => "CLI1", :is_enabled => true, :comments => "Solicita información"
        CallType.create :name => "Soporte", :code => "CLST1", :is_enabled => true, :comments => "Solicita soporte"
        
        CaseType.create :name => "Caso de Queja", :code => "CSQ1", :is_enabled => true, :comments => "Caso de queja", :severity_default => "High", :status_default => "New", :notify_email_default => true, :is_enabled => true, :instruction => "Reiterar telefónicamente que el asignado se enteró del nuevo caso"
        CaseType.create :name => "Caso de Sugerencia", :code => "CSS1", :is_enabled => true, :comments => "Caso de sugerencia", :severity_default => "Warning", :status_default => "Open", :notify_email_default => true, :is_enabled => true, :instruction => "Agradecer la sugerencia y mencionar que se tomará en cuenta"
        CaseType.create :name => "Otros", :code => "CSXX", :is_enabled => true, :comments => "No es sugerencia ni queja", :severity_default => "Event", :status_default => "Open", :notify_email_default => false, :is_enabled => true, :instruction => "Pasar la información al personal involucrado"
                
      end
      
      desc "Help Desk relate case call types"
      task :rel_help_desk_types => :environment do
        
        @case = CaseType.find(:first, :conditions => ["code = ?" , "CSQ1"])
        @case.call_type = CallType.find(:first, :conditions => ["code = ?" , "CLQ1"])
        @case.assigned_default = Person.find(:first, :conditions => ["organization_id = ?" , 1])
        @case.product_type = ProductType.current_products.find(:first)
        @case.save
        
        @case = CaseType.find(:first, :conditions => ["code = ?" , "CSS1"])
        @case.call_type = CallType.find(:first, :conditions => ["code = ?" , "CLS1"])
        @case.assigned_default = Person.find(:last, :conditions => ["organization_id = ?" , 1])
        @case.product_type = ProductType.current_products.find(:first)
        @case.save
        
        @case = CaseType.find(:first, :conditions => ["code = ?" , "CSXX"])
        @case.call_type = CallType.find(:first, :conditions => ["code = ?" , "CLI1"])
        @case.assigned_default = Person.find(:last, :conditions => ["organization_id = ?" , 1])
        @case.product_type = ProductType.current_products.find(:last)
        @case.save
        
      end

      desc "Circulation values"
      task :circulation_values => :environment do
        
        DeliveryChannel.create :name => "Suscriptores", :code => "SSC", :is_enabled => true, :comments => "Distribución por suscripciones", :drop_days_default => 1, :collect_days_default => 2 
        DeliveryChannel.create :name => "Voceadores", :code => "VCD", :is_enabled => true, :comments => "Distribución por voceadores", :drop_days_default => 3, :collect_days_default => 4
        DeliveryChannel.create :name => "Mercados Especiales", :code => "MKE", :is_enabled => true, :comments => "Distribución por mercados especiales", :drop_days_default => 5, :collect_days_default => 6
        DeliveryChannel.create :name => "Perifoneo", :code => "PRF", :is_enabled => true, :comments => "Distribución por perifoneo", :drop_days_default => 7, :collect_days_default => 7
        
        DeliveryType.create :name => "Semanal", :code => "LD", :is_enabled => true, :comments => "Toda la semana", 
                            :delivery_monday => true,
                            :delivery_tuesday => true,
                            :delivery_wednesday => true,
                            :delivery_thursday => true,
                            :delivery_friday => true,
                            :delivery_saturday => true,
                            :delivery_sunday => true
        DeliveryType.create :name => "Fin de Semana", :code => "VD", :is_enabled => true, :comments => "Solo fin de semana", 
                            :delivery_monday => false,
                            :delivery_tuesday => false,
                            :delivery_wednesday => false,
                            :delivery_thursday => false,
                            :delivery_friday => true,
                            :delivery_saturday => true,
                            :delivery_sunday => true
                            
          SocioeconomicLevel.create :name => "Privilegiado", :code => "AAA", :is_enabled => true, :comments => "Nivel más alto"
          SocioeconomicLevel.create :name => "Media", :code => "AB", :is_enabled => true, :comments => "Nivel Medio"
          SocioeconomicLevel.create :name => "Baja", :code => "B", :is_enabled => true, :comments => "Bajos ingresos"
    
      end
  
      desc "Configuration Values"
      task :configuration_values => :environment do
        
        ConfigValue.create :values_group => "SMTP", :name => "Address", :mask => "" , :comments => ""
        ConfigValue.create :values_group => "SMTP", :name => "Port", :mask => "" , :comments => ""
        ConfigValue.create :values_group => "SMTP", :name => "Authentication", :mask => "" , :comments => ""
        ConfigValue.create :values_group => "SMTP", :name => "User Name", :mask => "" , :comments => ""
        ConfigValue.create :values_group => "SMTP", :name => "Password", :mask => "" , :comments => ""
        ConfigValue.create :values_group => "SMTP", :name => "Domain", :mask => "" , :comments => ""
        ConfigValue.create :values_group => "SMTP", :name => "Enable Starttls Auto", :mask => "" , :comments => ""
        ConfigValue.create :values_group => "SMTP", :name => "Body Mail", :mask => "" , :comments => ""
        ConfigValue.create :values_group => "SMTP", :name => "From", :mask => "" , :comments => ""
      end
      
      desc "Enables existing library types"
      task :set_enabled_library_types => :environment do
        @library_type = LibraryType.find(:first, :conditions => ["name = ?", "[Mechanical Drawings]"])
        if !@library_type.nil? then
          @library_type.is_enabled = 1
          @library_type.save
        else
          LibraryType.create :name => "[Mechanical Drawings]", :is_enabled => true, :is_protected => 1
        end
        @library_type = LibraryType.find(:first, :conditions => ["name = ?", "[Nutritional Tables]"])
        if !@library_type.nil? then
          @library_type.is_enabled = 1
          @library_type.save
        else
          LibraryType.create :name => "[Nutritional Tables]", :is_enabled => true, :is_protected => 1
        end
      end
      
      desc "Protects existing library types"
      task :set_protected_library_types => :environment do
        @library_type = LibraryType.find(:first, :conditions => ["name = ?", "[Mechanical Drawings]"])
        if !@library_type.nil? then
          @library_type.is_protected = 1
          @library_type.save
        else
          LibraryType.create :name => "[Nutritional Tables]", :is_enabled => true, :is_protected => 1
        end
        @library_type = LibraryType.find(:first, :conditions => ["name = ?", "[Nutritional Tables]"])
        if !@library_type.nil? then
          @library_type.is_protected = 1
          @library_type.save
        else
          LibraryType.create :name => "[Nutritional Tables]", :is_enabled => true, :is_protected => 1
        end
      end
      
      desc "Enables existing markup stati"
      task :set_enabled_markup_stati => :environment do
        @markup_stati = MarkupStatus.find(:all)
        @markup_stati.each do |markup_status|
          markup_status.is_enabled = 1
          markup_status.save
        end
      end  
    
      desc "Enables existing metadata combos"
      task :set_enabled_metadata_combos => :environment do
        @metadata_combos = MetadataCombo.find(:all)
        @metadata_combos.each do |metadata_combo|
          metadata_combo.is_enabled = 1
          metadata_combo.save
        end
      end
    
      desc "Enables existing metadata definitions"
      task :set_enabled_metadata_definitions => :environment do
        @metadata_definitions = MetadataDefinition.find(:all)
        @metadata_definitions.each do |metadata_definition|
          metadata_definition.is_enabled = 1
          metadata_definition.save
        end
      end
    
      desc "Enables existing person users"
      task :set_enabled_person_users => :environment do
        @person_users = PersonUser.find(:all)
        @person_users.each do |person_user|
          person_user.is_enabled = 1
          person_user.save
          @user = person_user.users.first
          if ! @user.nil? then
            @user.is_enabled = 1
            @user.save
          end
        end
      end
      
      desc "Protects existing person users"
      task :set_protected_person_users => :environment do
        @person_users = PersonUser.find(:all)
        @person_users.each do |person_user|
          @user = person_user.users.first
          if !@user.nil? then
            @user.is_protected = 1
            @user.save
          end
        end
      end
      
      desc "Enables existing roles"
      task :set_enabled_roles => :environment do
        @roles = Role.find(:all)
        @roles.each do |role|
          role.is_enabled = 1
          role.save
        end
      end   
      
      desc "Create asset file for a library assets"
      task :create_asset_file_for_library_asset => :environment do
        @assets = Asset.find(:all, :conditions => ["current_version > ?", 0])
        @assets.each do |asset|
          if asset.asset_files[0] == nil then   
            i = 0
            asset.current_version.times do
              i+= 1
              asset_file = AssetFile.new
              asset_file.file_name = asset.id.to_s + "_" + i.to_s + ".pdf"
              asset_file.version = i
              asset_file.pages = 1
              asset_file.created_by = 1
              asset_file.updated_by = 1
              asset_file.generated_preview = 1
              asset_file.original_name = asset_file.file_name
              asset.asset_files << asset_file
              asset.save
            end
          end
        end
      end      
      

      desc "All enable & protected task."
      task :all_enabled_and_protected_tasks => [:set_enabled_library_types, :set_protected_library_types, :set_enabled_markup_stati, 
                        :set_enabled_metadata_combos, :set_enabled_metadata_definitions, :set_enabled_person_users, 
                        :set_protected_person_users, :set_enabled_roles, :create_asset_file_for_library_asset]

      desc "All data populate tasks. English version"
      task :all_eng => [:default_1_user, :default_2_client_values, :default_3_combo_values_english , :default_4_types_values_english, :default_5_values_english, :default_6_relational_values, :default_markup_values, 
                        :help_desk_types, :rel_help_desk_types, :circulation_values]
                        
      desc "All task included."
      task :all_task_included => [:default_1_user, :default_2_client_values, :default_3_combo_values_english , :default_4_types_values_english, :default_5_values_english, :default_6_relational_values, 
                        :default_markup_values, 
                        :configuration_values,
                        :help_desk_types, :rel_help_desk_types, :circulation_values,  
                        :default_asset_type_values, :default_deliverable_type_values, :default_job_type_values, :default_library_type_values, 
                        :default_metadata_definition_values, :default_metadata_combos_values, :populate_special_id_for_metadata_combo,
                        :set_enabled_library_types, :set_protected_library_types, :set_enabled_markup_stati, :set_enabled_metadata_combos,
                        :set_enabled_metadata_definitions, :set_enabled_person_users, :set_protected_person_users, :set_enabled_roles, :asset_files]
            
    end